<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.ct</groupId>
  <artifactId>library</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>library Maven Webapp</name>
  <url>http://maven.apache.org</url>
<properties>
        <org.springframework.version>4.2.6.RELEASE</org.springframework.version>

  </properties>

  <dependencies>
     <!-- aspectj -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>1.8.4</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>1.8.4</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjlib</artifactId>
            <version>1.6.2</version>
        </dependency>
        <!-- c3p0 -->
        <dependency>
            <groupId>c3p0</groupId>
            <artifactId>c3p0</artifactId>
            <version>0.9.1.2</version>
        </dependency>

         
         <dependency>
            <groupId>org.springframework</groupId>
             <artifactId>spring-context-support</artifactId><!-- spring-context  少 org.springframework.scheduling.quartz.QuartzJobBean定时器类因此改为这个spring-context-support -->
            <version>${org.springframework.version}</version>
        </dependency>
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
         <!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, 
            and iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx) 
            Define this if you need ORM (org.springframework.orm.*) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, 
            JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, 
            spring-context) Define this if you need OXM (org.springframework.oxm.*) -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-oxm</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
        
    
 	 <!-- mysql -->
      <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>5.1.25</version>
        </dependency>
  		 <dependency> 
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
  			
       <dependency>
  			<groupId>javax.servlet</groupId> 
  			<artifactId>javax.servlet-api</artifactId> 
  			<version>3.0.1</version> 
  		</dependency>
  		
  		 <!-- junit 4.5以上才支持spring单元测试 -->
       <dependency>
		      <groupId>junit</groupId>
		      <artifactId>junit</artifactId>
		      <version>4.11</version>
		      <scope>test</scope>
		    </dependency>
		    <dependency>
	            <groupId>org.springframework</groupId>
	            <artifactId>spring-test</artifactId>
	            <version>${org.springframework.version}</version>
	            <scope>test</scope>
	        </dependency>
	          <dependency>
             <groupId>cglib</groupId>
  			<artifactId>cglib</artifactId>
 			 <version>2.2.2</version>
         </dependency>
         
          <!-- springMVC :spring-webmvc.jar spring-web.jar spring-aspects.jar  -->
  		<dependency>
			  <groupId>org.springframework</groupId> 
			  <artifactId>spring-webmvc</artifactId> 
			  <version>${org.springframework.version}</version> 
  		</dependency>
  		<!--  mybatis -->
  		 <dependency>
  		  <groupId>org.mybatis</groupId> 
  		  <artifactId>mybatis</artifactId> 
  		  <version>3.3.1</version> 
  	  </dependency>
  	   <dependency>
 			 <groupId>org.mybatis</groupId> 
  			<artifactId>mybatis-spring</artifactId> 
  			<version>1.3.0</version> 
  		</dependency>
  		
  		   <!--  jackson转json 
  --> 
	 <dependency>
	  <groupId>com.fasterxml.jackson.core</groupId> 
	  <artifactId>jackson-core</artifactId> 
	  <version>2.6.3</version> 
	  </dependency>
	  <dependency>
	  <groupId>org.codehaus.jackson</groupId> 
	  <artifactId>jackson-mapper-asl</artifactId> 
	  <version>1.9.13</version> 
	  </dependency>
	 <dependency>
	  <groupId>com.fasterxml.jackson.core</groupId> 
	  <artifactId>jackson-annotations</artifactId> 
	  <version>2.6.3</version> 
	  </dependency>
	 <dependency>
	  <groupId>com.fasterxml.jackson.core</groupId> 
	  <artifactId>jackson-databind</artifactId> 
	  <version>2.6.3</version> 
	  </dependency>
	  <!-- 无法解析该包中JSONArray和JSONObject
	   <dependency>
		  <groupId>org.json</groupId> 
		  <artifactId>json</artifactId> 
		  <version>20140107</version> 
	  </dependency> 
	  -->
	  <dependency>
		  <groupId>net.sf.json-lib</groupId> 
		  <artifactId>json-lib</artifactId> 
		  <version>2.4</version> 
		  <classifier>jdk15</classifier> 
	  </dependency>
	  
	     <dependency>
	    	<groupId>commons-fileupload</groupId>
	    	<artifactId>commons-fileupload</artifactId>
	    	<version>1.3.2</version>
	    </dependency>
	       <dependency>
			    <groupId>org.apache.commons</groupId>
			    <artifactId>commons-io</artifactId>
			    <version>1.3.2</version>
	    </dependency>
           <dependency>
		  <groupId>org.slf4j</groupId> 
		  <artifactId>slf4j-log4j12</artifactId> 
		  <version>1.7.2</version> 
  		</dependency>
  		
  		<!--  验证码 -->
  		<dependency>
    		<groupId>com.github.penggle</groupId>
    		<artifactId>kaptcha</artifactId>
    		<version>2.3.2</version>
    		</dependency>
    		
    		<dependency>
    			 <groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>3.14</version>
    		</dependency>
    		
    		 
         </dependencies>
  <build>
    <finalName>library</finalName>
   <plugins>
        <plugin>
             <groupId>org.apache.maven.plugins</groupId>
             <artifactId>maven-compiler-plugin</artifactId>
             <version>3.0</version>
             <configuration>
                 <source>1.7</source>     
                 <target>1.7</target>      
             </configuration>
       </plugin>
       <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.2</version>
                     
                <configuration>
                    <url>http://localhost:8080/manager/html</url>
                   <!--  server、username、password对应maven的setting下的配置 -->
                     <server>tomcat7</server>
					 <username>admin</username> 
                     <password>admin</password>
                      
                   <path>/library</path>  <!-- 设置部署的路径 -->
                    
                   </configuration>
            </plugin>
    </plugins>


</build>  
</project>
